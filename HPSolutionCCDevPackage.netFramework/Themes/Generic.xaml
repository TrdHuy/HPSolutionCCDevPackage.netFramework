<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HPSolutionCCDevPackage.netFramework"
                    xmlns:properties="clr-namespace:HPSolutionCCDevPackage.netFramework.Properties"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <!--<ResourceDictionary Source="/CCDevProject.netFramework;component/ControlTemplateResources/Fonts.xaml" />-->
        <ResourceDictionary Source="/HPSolutionCCDevPackage.netFramework;component/ControlTemplateResources/HathorScrollView.xaml" />
        <ResourceDictionary Source="/HPSolutionCCDevPackage.netFramework;component/ControlTemplateResources/HorusBox.xaml" />

    </ResourceDictionary.MergedDictionaries>
    
    <!--Font area-->
    <FontFamily x:Key="FontAwesome">/HPSolutionCCDevPackage.netFramework;component/Resources/#FontAwesome</FontFamily>
    <FontFamily x:Key="Fredoka">/HPSolutionCCDevPackage.netFramework;component/Resources/#Fredoka One</FontFamily>

    <!--Image area-->
    <BitmapImage x:Key="MessageBoxErrorIcon"
                 UriSource="/Resources/Images/messagebox_error_icon.png"></BitmapImage>
    <BitmapImage x:Key="MessageBoxHandIcon"
                 UriSource="/Resources/Images/messagebox_hand_icon.png"></BitmapImage>
    <BitmapImage x:Key="MessageBoxInfoIcon"
                 UriSource="/Resources/Images/messagebox_info_icon.png"></BitmapImage>
    <BitmapImage x:Key="MessageBoxQuestIcon"
                 UriSource="/Resources/Images/messagebox_quest_icon.png"></BitmapImage>
    <BitmapImage x:Key="MessageBoxStopIcon"
                 UriSource="/Resources/Images/messagebox_stop_icon.png"></BitmapImage>

    <!--String area-->
    <system:String x:Key="FontAwesomeCloseWindowIcon">&#xf2d3;</system:String>
    <system:String x:Key="FontAwesomeMinimizeWindowIcon">&#xf2d1;</system:String>
    <system:String x:Key="FontAwesomeMaximizeWindowIcon">&#xf2d0;</system:String>
    <system:String x:Key="FontAwesomeRestoreWindowIcon">&#xf2d2;</system:String>
    <system:String x:Key="FontAwesomePreviousPageIcon">&#xf0a8;</system:String>
    <system:String x:Key="FontAwesomeNextPageIcon">&#xf0a9;</system:String>

    <!--Dimens area-->
    <system:Double x:Key="regular_font_size">20</system:Double>
    <system:Double x:Key="default_title_bar_height_dashboard_window">30</system:Double>
    <system:Double x:Key="default_icon_button_corner_radius">0</system:Double>
    <system:Double x:Key="default_icon_button_icon_height">30</system:Double>
    <system:Double x:Key="default_icon_button_icon_width">30</system:Double>
    <system:Double x:Key="default_icon_button_icon_text_gap_width">0</system:Double>

    <Thickness x:Key="default_icon_button_border_thickness">1</Thickness>

    <!--Color area-->
    <SolidColorBrush x:Key="default_bg_icon_button"
                     Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="default_border_brush_icon_button"
                     Color="#FF707070" />
    <SolidColorBrush x:Key="default_mouse_over_brush_icon_button"
                     Color="#4C5073CF" />
    <SolidColorBrush x:Key="default_mouse_pressed_brush_icon_button"
                     Color="#195073CF" />
    <SolidColorBrush x:Key="default_title_bar_background_dashboard_window"
                     Color="#FFDEDEDE" />
    <SolidColorBrush x:Key="default_mouse_over_window_button_background_dashboard_window"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="default_mouse_over_window_button_foreground_dashboard_window"
                     Color="#FF000000" />
    <SolidColorBrush x:Key="default_window_button_foreground_dashboard_window"
                     Color="#FF686868" />
    <!--Style area-->
    <Style x:Key="BaseStyle"
           TargetType="{x:Type Control}">
        <Setter Property="FontFamily"
                Value="{DynamicResource FontAwesome}" />
        <Setter Property="FontSize"
                Value="{StaticResource regular_font_size}" />
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="SpinningText">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="{StaticResource regular_font_size}" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontAwesome}" />
        <Setter Property="Text"
                Value="&#xf110;" />
        <Setter Property="RenderTransformOrigin"
                Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform></RotateTransform>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                 From="0"
                                 To="360"
                                 Duration="0:0:2"
                                 RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard"
                                     Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type local:IconButton}">
        <Setter Property="Background"
                Value="{StaticResource default_bg_icon_button}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource default_icon_button_border_thickness}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource default_border_brush_icon_button}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:IconButton">

                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            x:Name="MainBorderContainer"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding IBCornerRadius,
                        FallbackValue={StaticResource default_icon_button_corner_radius}}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                        AncestorType={x:Type local:IconButton}}}">

                        <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup Name="IsBusyStates">

                                <VisualState Name="Busy">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ProgressSpinner"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="0:0:1" />
                                        <DoubleAnimation Storyboard.TargetName="SPanelContainer"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="UnBusy" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Grid Width="{Binding ElementName=MainBorderContainer, Path=ActualWidth}"
                                          Height="{Binding ElementName=MainBorderContainer, Path=ActualHeight}">
                                        <Border Background="Black"
                                                CornerRadius="{Binding IBCornerRadius,
                                            FallbackValue={StaticResource default_icon_button_corner_radius}}" />
                                    </Grid>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Border.OpacityMask>

                        <Grid>

                            <TextBlock Opacity="0.0"
                                       x:Name="ProgressSpinner"
                                       Foreground="{Binding ProgressSpinnerBackground}"
                                       FontSize="{Binding ProgressSpinnerSize}"
                                       Style="{StaticResource SpinningText}">
                            </TextBlock>

                            <Grid Visibility="Collapsed"
                                  x:Name="ImageContentOnlyGrid">

                                <Image x:Name="ImageContentOnly_NoResize"
                                       Visibility="Collapsed"
                                       HorizontalAlignment="{Binding HorizontalContentAlignment}"
                                       VerticalAlignment="{Binding VerticalContentAlignment}"
                                       Source="{Binding IconSource}"
                                       Stretch="{Binding IconStretch}" />

                                <Image x:Name="ImageContentOnly_CanResize"
                                       Visibility="Visible"
                                       HorizontalAlignment="{Binding HorizontalContentAlignment}"
                                       VerticalAlignment="{Binding VerticalContentAlignment}"
                                       Width="{Binding IconWidth}"
                                       Height="{Binding IconHeight}"
                                       Source="{Binding IconSource}"
                                       Stretch="{Binding IconStretch}" />
                            </Grid>


                            <StackPanel Opacity="1.0"
                                        Visibility="Visible"
                                        x:Name="SPanelContainer"
                                        HorizontalAlignment="{Binding HorizontalContentAlignment}"
                                        VerticalAlignment="{Binding VerticalContentAlignment}"
                                        Orientation="{Binding IBContentOrientation}">
                                <Image x:Name="ImageContent"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Width="{Binding IconWidth}"
                                       Height="{Binding IconHeight}"
                                       Source="{Binding IconSource}"
                                       Stretch="{Binding IconStretch}" />

                                <Grid x:Name="GapView"
                                      Width="{Binding IconTextGapWidth, 
                                FallbackValue={StaticResource default_icon_button_icon_text_gap_width}}" />

                                <TextBlock x:Name="TextContent"
                                           HorizontalAlignment="{Binding IBTextHorizontalAlignment}"
                                           VerticalAlignment="{Binding IBTextVerticalAlignment}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStretch="{TemplateBinding FontStretch}"
                                           FontStyle="{TemplateBinding FontStyle}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{Binding TextContent}" />
                            </StackPanel>

                            <Grid x:Name="MouseOverEffectPanel"
                                  IsHitTestVisible="False" />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="TextContent"
                                 Value="{x:Null}">
                            <Setter TargetName="SPanelContainer"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ImageContentOnlyGrid"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextContent"
                                           Value="{x:Null}" />
                                <Condition Property="IconWidth"
                                           Value="0" />
                                <Condition Property="IconHeight"
                                           Value="0" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ImageContentOnly_CanResize"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ImageContentOnly_NoResize"
                                    Property="Visibility"
                                    Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="MouseOverEffectPanel"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:IconButton}},
                                Path=MouseOverEffectBackgroud, FallbackValue={StaticResource default_mouse_over_brush_icon_button}}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsUsingDropShadowEffect"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverEffectPanel"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:IconButton}},
                                Path=MousePressedEffectBackgroud, FallbackValue={StaticResource default_mouse_pressed_brush_icon_button}}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="False" />
                                <Condition Property="IsUsingDropShadowEffect"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorderContainer"
                                    Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                      BlurRadius="4"
                                                      Direction="330"
                                                      Opacity="0.5"
                                                      ShadowDepth="4" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsUsingDropShadowEffect"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorderContainer"
                                    Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                      BlurRadius="4"
                                                      Direction="0"
                                                      Opacity="0.5"
                                                      ShadowDepth="1" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AlyphNameTextBox}">
        <Setter Property="FirstNameForeground"
                Value="Black" />
        <Setter Property="LastNameForeground"
                Value="Green" />
        <Setter Property="LineSpace"
                Value="20" />
        <Setter Property="StrokeThickess"
                Value="2" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="TitleFontFamily"
                Value="{StaticResource FontAwesome}" />
        <Setter Property="TitleFontSize"
                Value="20" />
        <Setter Property="TitleFontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="30" />
        <Setter Property="FontFamily"
                Value="{StaticResource FontAwesome}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                        AncestorType={x:Type local:AlyphNameTextBox}}}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <Grid>
                            <Canvas x:Name="MainCanvas">

                                <Line x:Name="LeftLine"
                                      X1="0"
                                      Y1="0"
                                      X2="0"
                                      Y2="{Binding Height}"
                                      Stroke="{Binding LastNameForeground}"
                                      StrokeThickness="{Binding StrokeThickess}"></Line>
                                <Line x:Name="RightLine"
                                      X1="{Binding Width}"
                                      Y1="0"
                                      X2="{Binding Width}"
                                      Y2="{Binding Height}"
                                      Stroke="{Binding FirstNameForeground}"
                                      StrokeThickness="{Binding StrokeThickess}"></Line>

                                <Line x:Name="LeftBottomLine"
                                      Stroke="{Binding LastNameForeground}"
                                      StrokeThickness="{Binding StrokeThickess}"></Line>

                                <Line x:Name="RightBottomLine"
                                      Stroke="{Binding FirstNameForeground}"
                                      StrokeThickness="{Binding StrokeThickess}"></Line>

                                <Line x:Name="LeftTopLine"
                                      Stroke="{Binding LastNameForeground}"
                                      StrokeThickness="{Binding StrokeThickess}"></Line>

                                <Line x:Name="RightTopLine"
                                      Stroke="{Binding FirstNameForeground}"
                                      StrokeThickness="{Binding StrokeThickess}"></Line>

                                <StackPanel x:Name="TextContainer"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Orientation="Vertical">
                                    <StackPanel x:Name="NameContainer"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                Orientation="Horizontal">
                                        <StackPanel Orientation="Horizontal"
                                                    x:Name="TempMeasurePanel">
                                            <TextBlock Foreground="{Binding FirstNameForeground}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       FontWeight="{TemplateBinding FontWeight}"
                                                       Text="{Binding FirstName}"
                                                       x:Name="FirstNameTextBlock">
                                            </TextBlock>
                                            <TextBlock HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       Text=" "
                                                       FontWeight="{TemplateBinding FontWeight}">

                                            </TextBlock>
                                        </StackPanel>

                                        <TextBlock Foreground="{Binding LastNameForeground}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   FontWeight="{TemplateBinding FontWeight}"
                                                   Text="{Binding LastName}"
                                                   x:Name="LastNameTextBlock">
                                        </TextBlock>
                                    </StackPanel>

                                    <TextBlock HorizontalAlignment="Center"
                                               FontSize="{Binding TitleFontSize}"
                                               FontWeight="{Binding TitleFontWeight}"
                                               FontFamily="{Binding TitleFontFamily}"
                                               VerticalAlignment="Center"
                                               x:Name="TitleTextBlock"
                                               Text="{Binding Title}"></TextBlock>
                                </StackPanel>

                            </Canvas>

                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AnubisMessageBox}">

        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="TitleBarBackground"
                Value="{StaticResource default_title_bar_background_dashboard_window}" />

        <Setter Property="TitleBarHeight"
                Value="{StaticResource default_title_bar_height_dashboard_window}" />

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                    AncestorType={x:Type local:AnubisMessageBox}},
                    Path=TitleBarHeight, FallbackValue={StaticResource default_title_bar_height_dashboard_window}}" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AnubisMessageBox}">

                    <ControlTemplate.Resources>

                        <!--Window control button-->
                        <Style x:Key="WindowControlButton"
                               BasedOn="{StaticResource BaseStyle}"
                               TargetType="{x:Type Button}">
                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                                    Value="True" />
                            <Setter Property="Background"
                                    Value="Transparent" />
                            <Setter Property="Padding"
                                    Value="8" />
                            <Setter Property="VerticalAlignment"
                                    Value="Stretch" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource default_window_button_foreground_dashboard_window}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}"
                                                Padding="{TemplateBinding Padding}">
                                            <Viewbox Stretch="Uniform">
                                                <TextBlock HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontWeight="Thin"
                                                           Text="{TemplateBinding Content}" />
                                            </Viewbox>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{StaticResource default_mouse_over_window_button_background_dashboard_window}" />
                                    <Setter Property="Foreground"
                                            Value="{StaticResource default_mouse_over_window_button_foreground_dashboard_window}" />
                                </Trigger>

                            </Style.Triggers>
                        </Style>

                        <!-- Window Close Button -->
                        <Style x:Key="WindowCloseButton"
                               BasedOn="{StaticResource WindowControlButton}"
                               TargetType="{x:Type Button}">

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="Red" />
                                    <Setter Property="Foreground"
                                            Value="White" />
                                </Trigger>
                            </Style.Triggers>

                        </Style>

                    </ControlTemplate.Resources>

                    <Border x:Name="MainBorderContainer"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">

                        <Grid x:Name="MainGridContainer">

                            <!--Main content field-->
                            <Grid x:Name="ContentGrid"
                                  DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                AncestorType={x:Type local:AnubisMessageBox}}}">

                                <!--Content and title bar field-->
                                <Grid x:Name="ContentAndTitleGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!--Title bar-->
                                    <Grid x:Name="TitleBartGrid"
                                          Grid.Row="0"
                                          Height="{Binding TitleBarHeight, FallbackValue=50}"
                                          VerticalAlignment="Stretch"
                                          Background="{Binding TitleBarBackground, 
                                        FallbackValue={StaticResource default_title_bar_background_dashboard_window}}"
                                          DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor
                                        ,AncestorType={x:Type local:AnubisMessageBox}}}"
                                          WindowChrome.IsHitTestVisibleInChrome="False">
                                        <Grid.ColumnDefinitions>
                                            <!--Title-->
                                            <ColumnDefinition Width="*" />
                                            <!--Windows Button-->
                                            <ColumnDefinition Width="Auto" />

                                        </Grid.ColumnDefinitions>


                                        <!--Title-->
                                        <TextBlock x:Name="CaptionTextBlock"
                                                   HorizontalAlignment="Left"
                                                   Grid.Column="0"
                                                   Margin="5"
                                                   Text="{Binding CaptionContent}" />

                                        <!--Window Buttons-->
                                        <StackPanel x:Name="WindowControlPanel"
                                                    Grid.Column="1"
                                                    Orientation="Horizontal">

                                            <Button x:Name="MinimizeButton"
                                                    Command="{Binding MinimizeCommand}"
                                                    Content="{StaticResource FontAwesomeMinimizeWindowIcon}"
                                                    Style="{StaticResource WindowControlButton}" />
                                            <Button x:Name="CloseButton"
                                                    Command="{Binding CloseCommand}"
                                                    Content="{StaticResource FontAwesomeCloseWindowIcon}"
                                                    Style="{StaticResource WindowCloseButton}" />
                                        </StackPanel>

                                    </Grid>

                                    <!--Content field-->
                                    <Grid x:Name="MainContentGrid"
                                          Grid.Row="1"
                                          Visibility="Visible">

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="3*" />
                                            <RowDefinition Height="0.7*" />
                                        </Grid.RowDefinitions>


                                        <!--Custom content area-->
                                        <Grid Grid.Row="0"
                                              x:Name="CustomContentArea">
                                            <ContentControl Grid.Row="1"
                                                            Content="{TemplateBinding Content}"
                                                            Visibility="Visible" />
                                        </Grid>

                                        <!--Content area-->
                                        <Grid x:Name="DefaultContentArea"
                                              Background="White"
                                              Grid.Row="0"
                                              Visibility="Visible">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <Image x:Name="DefaultContentImage"
                                                   Grid.Column="0"
                                                   Margin="20"
                                                   Width="50"
                                                   Height="50"
                                                   Stretch="Uniform" />

                                            <TextBox Grid.Column="1"
                                                     x:Name="DefaultContentTextBox"
                                                     BorderThickness="0"
                                                     IsReadOnly="True"
                                                     TextWrapping="Wrap"
                                                     HorizontalAlignment="Left"
                                                     VerticalAlignment="Center"
                                                     Text="{Binding AnubisMessage}"
                                                     HorizontalContentAlignment="Left"
                                                     VerticalContentAlignment="Center">
                                            </TextBox>
                                        </Grid>

                                        <!--Button area-->
                                        <Grid Grid.Row="1"
                                              Background="White">

                                            <UniformGrid x:Name="YesNoCancleButtonField"
                                                         Columns="3">
                                                <local:IconButton Margin="5"
                                                                  MaxHeight="30"
                                                                  MaxWidth="90"
                                                                  Visibility="Collapsed"
                                                                  Grid.Column="0"
                                                                  Style="{Binding YesButtonStyle}"
                                                                  x:Name="YesButton" />
                                                <local:IconButton Margin="5"
                                                                  MaxWidth="90"
                                                                  MaxHeight="30"
                                                                  Visibility="Collapsed"
                                                                  Grid.Column="1"
                                                                  Style="{Binding NoButtonStyle}"
                                                                  x:Name="NoButton" />
                                                <local:IconButton Margin="5"
                                                                  MaxHeight="30"
                                                                  MaxWidth="90"
                                                                  Grid.Column="2"
                                                                  Visibility="Collapsed"
                                                                  Style="{Binding CancleButtonStyle}"
                                                                  x:Name="CancleButton" />
                                                <local:IconButton Margin="5"
                                                                  MaxHeight="30"
                                                                  MaxWidth="90"
                                                                  Grid.Column="1"
                                                                  Visibility="Collapsed"
                                                                  Style="{Binding OKButtonStyle}"
                                                                  x:Name="OKButton" />
                                            </UniformGrid>
                                        </Grid>
                                    </Grid>

                                </Grid>
                            </Grid>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <!--Default content message icon trigger-->
                        <Trigger Property="AnubisMesIcon"
                                 Value="Non">
                            <Setter TargetName="DefaultContentImage"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="DefaultContentTextBox"
                                    Property="HorizontalAlignment"
                                    Value="Center" />
                        </Trigger>
                        <Trigger Property="AnubisMesIcon"
                                 Value="Error">
                            <Setter TargetName="DefaultContentImage"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="DefaultContentImage"
                                    Property="Source"
                                    Value="/HPSolutionCCDevPackage.netFramework;component/Resources/Images/messagebox_error_icon.png" />
                        </Trigger>
                        <Trigger Property="AnubisMesIcon"
                                 Value="Hand">
                            <Setter TargetName="DefaultContentImage"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="DefaultContentImage"
                                    Property="Source"
                                    Value="/HPSolutionCCDevPackage.netFramework;component/Resources/Images/messagebox_hand_icon.png" />
                        </Trigger>
                        <Trigger Property="AnubisMesIcon"
                                 Value="Info">
                            <Setter TargetName="DefaultContentImage"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="DefaultContentImage"
                                    Property="Source"
                                    Value="/HPSolutionCCDevPackage.netFramework;component/Resources/Images/messagebox_info_icon.png" />
                        </Trigger>
                        <Trigger Property="AnubisMesIcon"
                                 Value="Stop">
                            <Setter TargetName="DefaultContentImage"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="DefaultContentImage"
                                    Property="Source"
                                    Value="/HPSolutionCCDevPackage.netFramework;component/Resources/Images/messagebox_stop_icon.png" />
                        </Trigger>
                        <Trigger Property="AnubisMesIcon"
                                 Value="Question">
                            <Setter TargetName="DefaultContentImage"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="DefaultContentImage"
                                    Property="Source"
                                    Value="/HPSolutionCCDevPackage.netFramework;component/Resources/Images/messagebox_quest_icon.png" />
                        </Trigger>

                        <!--Custom content trigger-->
                        <Trigger Property="CustomMessageContent"
                                 Value="{x:Null}">
                            <Setter TargetName="CustomContentArea"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="DefaultContentArea"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>

                        <!--Message box type trigger-->
                        <Trigger Property="AnubisMesType"
                                 Value="Default">
                            <Setter TargetName="OKButton"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="YesNoCancleButtonField"
                                    Property="Columns"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="AnubisMesType"
                                 Value="YesNo">
                            <Setter TargetName="YesButton"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="NoButton"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="YesNoCancleButtonField"
                                    Property="Columns"
                                    Value="2" />
                        </Trigger>
                        <Trigger Property="AnubisMesType"
                                 Value="YesNoCancle">
                            <Setter TargetName="YesButton"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="NoButton"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="CancleButton"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="YesNoCancleButtonField"
                                    Property="Columns"
                                    Value="3" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
