<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HPSolutionCCDevPackage.netFramework"
                    xmlns:properties="clr-namespace:HPSolutionCCDevPackage.netFramework.Properties"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="regular_font_size">20</system:Double>
    <FontFamily x:Key="FontAwesome">/HPSolutionCCDevPackage.netFramework;component/Resources/#FontAwesome</FontFamily>

    <!--Dimen area-->
    <system:Double x:Key="default_icon_button_corner_radius">0</system:Double>
    <system:Double x:Key="default_icon_button_icon_height">30</system:Double>
    <system:Double x:Key="default_icon_button_icon_width">30</system:Double>
    <system:Double x:Key="default_icon_button_icon_text_gap_width">0</system:Double>
    <Thickness x:Key="default_icon_button_border_thickness">1</Thickness>

    <!--Color area-->
    <SolidColorBrush x:Key="default_bg_icon_button"
                     Color="#FFDDDDDD" />
    <SolidColorBrush x:Key="default_border_brush_icon_button"
                     Color="#FF707070" />
    <SolidColorBrush x:Key="default_mouse_over_brush_icon_button"
                     Color="#4C5073CF" />
    <SolidColorBrush x:Key="default_mouse_pressed_brush_icon_button"
                     Color="#195073CF" />

    <Style TargetType="{x:Type local:OsirisButton}">
        <Setter Property="Background"
                Value="{StaticResource default_bg_icon_button}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource default_icon_button_border_thickness}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource default_border_brush_icon_button}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:OsirisButton">

                    <ControlTemplate.Resources>

                        <Style TargetType="{x:Type TextBlock}"
                               x:Key="SpinningText">
                            <Setter Property="HorizontalAlignment"
                                    Value="Center" />
                            <Setter Property="VerticalAlignment"
                                    Value="Center" />
                            <Setter Property="FontSize"
                                    Value="{StaticResource regular_font_size}" />
                            <Setter Property="FontFamily"
                                    Value="{StaticResource FontAwesome}" />
                            <Setter Property="Text"
                                    Value="&#xf110;" />
                            <Setter Property="RenderTransformOrigin"
                                    Value="0.5, 0.5" />
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform></RotateTransform>
                                </Setter.Value>
                            </Setter>

                            <Style.Resources>
                                <Storyboard x:Key="Spin">
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                     From="0"
                                                     To="360"
                                                     Duration="0:0:2"
                                                     RepeatBehavior="Forever" />
                                </Storyboard>
                            </Style.Resources>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="SpinStoryboard"
                                                         Storyboard="{StaticResource Spin}" />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>

                    </ControlTemplate.Resources>

                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            x:Name="MainBorderContainer"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding OBCornerRadius,
                        FallbackValue={StaticResource default_icon_button_corner_radius}}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                        AncestorType={x:Type local:OsirisButton}}}">

                        <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup Name="IsBusyStates">

                                <VisualState Name="Busy">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ProgressSpinner"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="0.0"
                                                         To="1.0"
                                                         Duration="0:0:1" />
                                        <DoubleAnimation Storyboard.TargetName="SPanelContainer"
                                                         Storyboard.TargetProperty="Opacity"
                                                         From="1.0"
                                                         To="0.0"
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState Name="UnBusy" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>

                            <TextBlock Opacity="0.0"
                                       x:Name="ProgressSpinner"
                                       Foreground="{Binding ProgressSpinnerBackground}"
                                       FontSize="{Binding ProgressSpinnerSize}"
                                       Style="{StaticResource SpinningText}">
                            </TextBlock>

                            <Grid Visibility="Collapsed"
                                  x:Name="ImageContentOnlyGrid">

                                <Image x:Name="ImageContentOnly_NoResize"
                                       Visibility="Collapsed"
                                       HorizontalAlignment="{Binding HorizontalContentAlignment}"
                                       VerticalAlignment="{Binding VerticalContentAlignment}"
                                       Source="{Binding IconSource}"
                                       Stretch="{Binding IconStretch}" />

                                <Image x:Name="ImageContentOnly_CanResize"
                                       Visibility="Visible"
                                       HorizontalAlignment="{Binding HorizontalContentAlignment}"
                                       VerticalAlignment="{Binding VerticalContentAlignment}"
                                       Width="{Binding IconWidth}"
                                       Height="{Binding IconHeight}"
                                       Source="{Binding IconSource}"
                                       Stretch="{Binding IconStretch}" />
                            </Grid>


                            <StackPanel Opacity="1.0"
                                        Visibility="Visible"
                                        x:Name="SPanelContainer"
                                        HorizontalAlignment="{Binding HorizontalContentAlignment}"
                                        VerticalAlignment="{Binding VerticalContentAlignment}"
                                        Orientation="{Binding OBContentOrientation}">
                                <Image x:Name="ImageContent"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Width="{Binding IconWidth}"
                                       Height="{Binding IconHeight}"
                                       Source="{Binding IconSource}"
                                       Stretch="{Binding IconStretch}" />

                                <Grid x:Name="GapView"
                                      Width="{Binding IconTextGapWidth, 
                                FallbackValue={StaticResource default_icon_button_icon_text_gap_width}}" />

                                <TextBlock x:Name="TextContent"
                                           TextDecorations="{Binding TextDecor}"
                                           HorizontalAlignment="{Binding OBTextHorizontalAlignment}"
                                           VerticalAlignment="{Binding OBTextVerticalAlignment}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStretch="{TemplateBinding FontStretch}"
                                           FontStyle="{TemplateBinding FontStyle}"
                                           FontWeight="{TemplateBinding FontWeight}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{Binding TextContent}" />
                            </StackPanel>

                            <Grid x:Name="MouseOverEffectPanel"
                                  IsHitTestVisible="False" />
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <!--Content display trigger-->
                        <Trigger Property="TextContent"
                                 Value="{x:Null}">
                            <Setter TargetName="SPanelContainer"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ImageContentOnlyGrid"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>

                        <!--Content display trigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TextContent"
                                           Value="{x:Null}" />
                                <Condition Property="IconWidth"
                                           Value="0" />
                                <Condition Property="IconHeight"
                                           Value="0" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ImageContentOnly_CanResize"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ImageContentOnly_NoResize"
                                    Property="Visibility"
                                    Value="Visible" />
                        </MultiTrigger>

                        <!--Mouse over trigger-->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="MouseOverEffectPanel"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:OsirisButton}},
                                Path=MouseOverEffectBackgroud, FallbackValue={StaticResource default_mouse_over_brush_icon_button}}" />
                            <Setter Property="Cursor"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:OsirisButton}},
                                Path=Cursor, FallbackValue=Hand}" />

                        </Trigger>

                        <!--Pressed without shadow trigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsUsingDropShadowEffect"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MouseOverEffectPanel"
                                    Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:OsirisButton}},
                                Path=MousePressedEffectBackgroud, FallbackValue={StaticResource default_mouse_pressed_brush_icon_button}}" />
                        </MultiTrigger>

                        <!--Unpressed trigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="False" />
                                <Condition Property="IsUsingDropShadowEffect"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorderContainer"
                                    Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                      BlurRadius="4"
                                                      Direction="330"
                                                      Opacity="0.5"
                                                      ShadowDepth="4" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                        <!--Pressed trigger-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="IsUsingDropShadowEffect"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="MainBorderContainer"
                                    Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Black"
                                                      BlurRadius="4"
                                                      Direction="0"
                                                      Opacity="0.5"
                                                      ShadowDepth="1" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>